/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import {
  ComponentDebugEntry,
  ComponentDebugInfo,
  DebugInfoStatus,
} from './helpers/injector';

declare global {
  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;
  }
}



import {
  StiDebugGroup as StiDebugGroup
} from './components/sti-debug-group/sti-debug-group';

declare global {
  interface HTMLStiDebugGroupElement extends StiDebugGroup, HTMLStencilElement {
  }
  var HTMLStiDebugGroupElement: {
    prototype: HTMLStiDebugGroupElement;
    new (): HTMLStiDebugGroupElement;
  };
  interface HTMLElementTagNameMap {
    "sti-debug-group": HTMLStiDebugGroupElement;
  }
  interface ElementTagNameMap {
    "sti-debug-group": HTMLStiDebugGroupElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "sti-debug-group": JSXElements.StiDebugGroupAttributes;
    }
  }
  namespace JSXElements {
    export interface StiDebugGroupAttributes extends HTMLAttributes {
      category?: string;
      heading?: string;
      info?: DebugInfoStatus;
      items?: ComponentDebugInfo;
    }
  }
}


import {
  StiLogo as StiLogo
} from './components/sti-logo/sti-logo';

declare global {
  interface HTMLStiLogoElement extends StiLogo, HTMLStencilElement {
  }
  var HTMLStiLogoElement: {
    prototype: HTMLStiLogoElement;
    new (): HTMLStiLogoElement;
  };
  interface HTMLElementTagNameMap {
    "sti-logo": HTMLStiLogoElement;
  }
  interface ElementTagNameMap {
    "sti-logo": HTMLStiLogoElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "sti-logo": JSXElements.StiLogoAttributes;
    }
  }
  namespace JSXElements {
    export interface StiLogoAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  StiMain as StiMain
} from './components/sti-main/sti-main';

declare global {
  interface HTMLStiMainElement extends StiMain, HTMLStencilElement {
  }
  var HTMLStiMainElement: {
    prototype: HTMLStiMainElement;
    new (): HTMLStiMainElement;
  };
  interface HTMLElementTagNameMap {
    "sti-main": HTMLStiMainElement;
  }
  interface ElementTagNameMap {
    "sti-main": HTMLStiMainElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "sti-main": JSXElements.StiMainAttributes;
    }
  }
  namespace JSXElements {
    export interface StiMainAttributes extends HTMLAttributes {
      
    }
  }
}


import {
  StiPropertyView as StiPropertyView
} from './components/sti-property-view/sti-property-view';

declare global {
  interface HTMLStiPropertyViewElement extends StiPropertyView, HTMLStencilElement {
  }
  var HTMLStiPropertyViewElement: {
    prototype: HTMLStiPropertyViewElement;
    new (): HTMLStiPropertyViewElement;
  };
  interface HTMLElementTagNameMap {
    "sti-property-view": HTMLStiPropertyViewElement;
  }
  interface ElementTagNameMap {
    "sti-property-view": HTMLStiPropertyViewElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "sti-property-view": JSXElements.StiPropertyViewAttributes;
    }
  }
  namespace JSXElements {
    export interface StiPropertyViewAttributes extends HTMLAttributes {
      item?: ComponentDebugEntry;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
